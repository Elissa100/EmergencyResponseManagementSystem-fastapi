{"ast":null,"code":"var _jsxFileName = \"/home/trent/Documents/python/projects/erms_fastApi/frontend/src/components/EmergenciesList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Container, Card, Row, Col, Button, Form } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmergenciesList = ({\n  userRole,\n  userId\n}) => {\n  _s();\n  const [emergencies, setEmergencies] = useState([]);\n  const [responseText, setResponseText] = useState('');\n  useEffect(() => {\n    const fetchEmergencies = async () => {\n      try {\n        const result = await axios.get('http://127.0.0.1:8000/emergencies/');\n        setEmergencies(result.data);\n      } catch (error) {\n        console.error('Error fetching emergencies', error);\n      }\n    };\n    fetchEmergencies();\n  }, []);\n  const handleRespond = async emergencyId => {\n    try {\n      await axios.post(`http://127.0.0.1:8000/emergencies/${emergencyId}/respond`, {\n        responder_id: userId,\n        response: responseText\n      });\n      alert('You have responded to the emergency.');\n      // Update the emergencies list after responding\n      const updatedEmergencies = emergencies.map(emergency => emergency.id === emergencyId ? {\n        ...emergency,\n        responder_id: userId,\n        response: responseText\n      } : emergency);\n      setEmergencies(updatedEmergencies);\n      setResponseText('');\n    } catch (error) {\n      console.error('Error responding to emergency', error);\n      alert('Failed to respond to the emergency');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Emergencies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), emergencies.map(emergency => /*#__PURE__*/_jsxDEV(Card, {\n      className: \"mb-3\",\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            md: 8,\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: emergency.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Location:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 28\n              }, this), \" \", emergency.location]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Status:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 28\n              }, this), \" \", emergency.responder_id ? 'Responded' : 'Not Responded']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this), userRole === 'responder' && !emergency.responder_id && /*#__PURE__*/_jsxDEV(Col, {\n            md: 4,\n            className: \"text-right\",\n            children: /*#__PURE__*/_jsxDEV(Form, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: `formResponse${emergency.id}`,\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Response\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 53,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  as: \"textarea\",\n                  rows: 3,\n                  value: responseText,\n                  onChange: e => setResponseText(e.target.value),\n                  placeholder: \"Enter your response\",\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"success\",\n                onClick: () => handleRespond(emergency.id),\n                children: \"Respond\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)\n    }, emergency.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(EmergenciesList, \"lCvaYuswm8hOFoKOkOpMK3r6Axk=\");\n_c = EmergenciesList;\nexport default EmergenciesList;\nvar _c;\n$RefreshReg$(_c, \"EmergenciesList\");","map":{"version":3,"names":["React","useState","useEffect","axios","Container","Card","Row","Col","Button","Form","jsxDEV","_jsxDEV","EmergenciesList","userRole","userId","_s","emergencies","setEmergencies","responseText","setResponseText","fetchEmergencies","result","get","data","error","console","handleRespond","emergencyId","post","responder_id","response","alert","updatedEmergencies","map","emergency","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Body","md","Title","description","Text","location","Group","controlId","Label","Control","as","rows","value","onChange","e","target","placeholder","required","variant","onClick","_c","$RefreshReg$"],"sources":["/home/trent/Documents/python/projects/erms_fastApi/frontend/src/components/EmergenciesList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Container, Card, Row, Col, Button, Form } from 'react-bootstrap';\n\nconst EmergenciesList = ({ userRole, userId }) => {\n  const [emergencies, setEmergencies] = useState([]);\n  const [responseText, setResponseText] = useState('');\n\n  useEffect(() => {\n    const fetchEmergencies = async () => {\n      try {\n        const result = await axios.get('http://127.0.0.1:8000/emergencies/');\n        setEmergencies(result.data);\n      } catch (error) {\n        console.error('Error fetching emergencies', error);\n      }\n    };\n    fetchEmergencies();\n  }, []);\n\n  const handleRespond = async (emergencyId) => {\n    try {\n      await axios.post(`http://127.0.0.1:8000/emergencies/${emergencyId}/respond`, { responder_id: userId, response: responseText });\n      alert('You have responded to the emergency.');\n      // Update the emergencies list after responding\n      const updatedEmergencies = emergencies.map(emergency =>\n        emergency.id === emergencyId ? { ...emergency, responder_id: userId, response: responseText } : emergency\n      );\n      setEmergencies(updatedEmergencies);\n      setResponseText('');\n    } catch (error) {\n      console.error('Error responding to emergency', error);\n      alert('Failed to respond to the emergency');\n    }\n  };\n\n  return (\n    <Container className=\"mt-5\">\n      <h2>Emergencies</h2>\n      {emergencies.map(emergency => (\n        <Card className=\"mb-3\" key={emergency.id}>\n          <Card.Body>\n            <Row>\n              <Col md={8}>\n                <Card.Title>{emergency.description}</Card.Title>\n                <Card.Text><strong>Location:</strong> {emergency.location}</Card.Text>\n                <Card.Text><strong>Status:</strong> {emergency.responder_id ? 'Responded' : 'Not Responded'}</Card.Text>\n              </Col>\n              {userRole === 'responder' && !emergency.responder_id && (\n                <Col md={4} className=\"text-right\">\n                  <Form>\n                    <Form.Group controlId={`formResponse${emergency.id}`}>\n                      <Form.Label>Response</Form.Label>\n                      <Form.Control as=\"textarea\" rows={3} value={responseText} onChange={(e) => setResponseText(e.target.value)} placeholder=\"Enter your response\" required />\n                    </Form.Group>\n                    <Button variant=\"success\" onClick={() => handleRespond(emergency.id)}>Respond</Button>\n                  </Form>\n                </Col>\n              )}\n            </Row>\n          </Card.Body>\n        </Card>\n      ))}\n    </Container>\n  );\n};\n\nexport default EmergenciesList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}